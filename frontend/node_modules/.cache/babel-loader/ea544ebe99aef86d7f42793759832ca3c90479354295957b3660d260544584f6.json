{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhatt\\\\OneDrive\\\\Desktop\\\\completeProject\\\\todo-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TodoList from \"./components/TodoList.js\";\nimport TodoForm from \"./components/TodoForm.js\";\nimport './App.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n\n  // Fetch todos from the backend\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/todos');\n      // const response = await fetch('http://backend:5000/api/todos');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n\n  // Fetch todos when the component mounts\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      fetchTodos: fetchTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      fetchTodos: fetchTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TodoList","TodoForm","axios","jsxDEV","_jsxDEV","App","_s","todos","setTodos","fetchTodos","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bhatt/OneDrive/Desktop/completeProject/todo-app/frontend/src/App.js"],"sourcesContent":["import React ,{useState, useEffect } from \"react\";\r\nimport TodoList from \"./components/TodoList.js\";\r\nimport TodoForm from \"./components/TodoForm.js\";\r\nimport './App.css';\r\nimport axios from \"axios\";\r\n\r\nfunction App(){\r\n    const [todos, setTodos] = useState([]);\r\n\r\n  // Fetch todos from the backend\r\n  const fetchTodos = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/todos');\r\n     // const response = await fetch('http://backend:5000/api/todos');\r\n         setTodos(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching todos:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch todos when the component mounts\r\n  useEffect(() => {\r\n    fetchTodos();\r\n  }, []);\r\n\r\n\r\n    return(\r\n        <div className=\"App\">\r\n            <TodoForm fetchTodos={fetchTodos }  />\r\n            <TodoList todos={  todos }  fetchTodos={fetchTodos } />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACV,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iCAAiC,CAAC;MACpE;MACIH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;;EAED;EACAd,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAGJ,oBACIL,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBZ,OAAA,CAACH,QAAQ;MAACQ,UAAU,EAAEA;IAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtChB,OAAA,CAACJ,QAAQ;MAACO,KAAK,EAAIA,KAAO;MAAEE,UAAU,EAAEA;IAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEd;AAACd,EAAA,CA1BQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}