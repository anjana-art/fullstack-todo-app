{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhatt\\\\OneDrive\\\\Desktop\\\\completeProject\\\\todo-app\\\\frontend\\\\src\\\\components\\\\TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport notepen from './images/notepen.png';\nimport './TodoForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [title, setTitle] = useState('');\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/todos');\n      // const response = await fetch('http://backend:5000/api/todos');\n\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title) return;\n    try {\n      await axios.post('http://localhost:5000/api/todos', {\n        title\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => console.log(response.data)).catch(error => console.error('Error:', error));\n      setTitle(''); // Clear the input field\n      fetchTodos(); // Refresh the todo list\n    } catch (error) {\n      console.error('Error creating todo:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Todo List  \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: notepen,\n          alt: \"pen img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"input-box\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Add a new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"addbutton\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"H+cxwdhJivT6+BEv+FD1fN0ZcZ4=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","notepen","jsxDEV","_jsxDEV","TodoForm","_s","todos","setTodos","title","setTitle","fetchTodos","response","get","data","error","console","handleSubmit","e","preventDefault","post","headers","then","log","catch","onSubmit","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/bhatt/OneDrive/Desktop/completeProject/todo-app/frontend/src/components/TodoForm.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport notepen from './images/notepen.png'\r\nimport './TodoForm.css';\r\n\r\n\r\n\r\n\r\n\r\nconst TodoForm = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n\r\n  const fetchTodos = async () => {\r\n  \r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/todos');\r\n     // const response = await fetch('http://backend:5000/api/todos');\r\n  \r\n      setTodos(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching todos:', error);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    fetchTodos();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!title) return;\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/todos', { title }, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }).then(response => console.log(response.data))\r\n      .catch(error => console.error('Error:', error));\r\n\r\n      setTitle(''); // Clear the input field\r\n      fetchTodos(); // Refresh the todo list\r\n    } catch (error) {\r\n      console.error('Error creating todo:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n        <div className='row'>\r\n            <h2>Todo List  <img src={notepen} alt='pen img'></img></h2>\r\n\r\n              <input\r\n                type=\"text\"\r\n                 id=\"input-box\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                placeholder=\"Add a new task\"\r\n              />\r\n              <button type='submit'  id='addbutton'>Add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}